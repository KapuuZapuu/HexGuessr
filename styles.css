/* Define a shadow variable for light mode */
:root {
    /* icon shadow mechanic: */
    --icon-shadow: #c8c8c8;  /* softer on light backgrounds */
    /* icon hover mechanic: */
    --icon-color: #000000;
    --icon-color-hover: #555555;
    /* tooltip variables: */
    --tip-bg: #000;
    --tip-fg: #fff;
    --tip-offset: 8px;
    /* Monospace fallbacks reduce the visual jump before the webfont loads */
    --ps2p-stack:   'Press Start 2P', ui-monospace, SFMono-Regular, Menlo, Monaco,
                    Consolas, 'Liberation Mono', 'Courier New', monospace;
}

/* Tooltip styling */
.has-tooltip {
    position: relative; /* establish positioning context */
}
.has-tooltip::after {
    content: attr(aria-label);
    position: absolute;
    left: 50%;
    top: 100%;
    transform: translate(-50%, var(--tip-offset));
    font-size: 10px;
    line-height: 1.2;
    white-space: nowrap;
    padding: 6px 8px;
    box-shadow: 4px 4px 0 var(--icon-shadow);
    background: var(--tip-bg);
    color: var(--tip-fg);
    border: 1px solid var(--tip-bg);
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
    z-index: 1001;
    transition: opacity 0.12s ease, transform 0.12s ease;
}
.has-tooltip:hover::after,
.has-tooltip:focus-visible::after {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, calc(var(--tip-offset) + 2px));
}
/* Special case: paste button tooltip appears to the right */
.paste-btn.has-tooltip::after {
    top: 50%;              /* center vertically */
    left: 100%;            /* place to the right of the button */
    transform: translate(var(--tip-offset), -50%);
}
.paste-btn.has-tooltip:hover::after,
.paste-btn.has-tooltip:focus-visible::after {
    transform: translate(calc(var(--tip-offset) + 2px), -50%);
}

.layout-container {
    width: 100%;
    margin: 0 auto;
    box-sizing: border-box;
    padding: 5px 30px;
}

.game-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    width: 100%;
}
        
.game-container {
    padding-top: 30px 0;
    width: 100%;
}

/* Top-right container for the two buttons */
.top-controls {
    position: absolute;
    right: 5px;
    transform: none;
    display: flex;
    gap: 12px;
    z-index: 1000;
    align-items: center;
    margin: 0;
}

.mode-container {
    position: absolute;
    left: 5px;
    transform: none;
    display: flex;
    align-items: center;
    gap: 10px;             /* matches your other flex gaps */
    padding: 10px;         /* same "cushion" as your color picker */
    background: rgba(143, 143, 143, 0.1);
    margin: 0;
}
/* Button styling, same aesthetic as your "click to reveal" square */
.mode-btn {
    width: 130px;             /* wide and rectangular */
    height: 40px;
    background: #f9f9f9;        /* same blank canvas */
    border: none;
    cursor: pointer;

    /* block-pixel look */
    filter: drop-shadow(4px 4px 0 var(--icon-shadow));
    font-size: 12px;
    color: black;

    /* center the label */
    display: flex;
    align-items: center;
    justify-content: center;
}
.mode-btn:hover {
    background: #f1f1f1
}
body.dark .mode-container {
    background: #1d1d1d;
}
body.dark .mode-btn {
    background: #2e2e2e;
    color: #ffffff;
}
body.dark .mode-btn:hover {
    background: #373737
}

.icon-btn {
    background: none;
    border: none;
    padding: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
}
.icon-btn .icon {
    filter: drop-shadow(4px 4px 0 var(--icon-shadow));
}
.icon {
    width: 45px;
    height: 45px;
    display: block;
    fill: currentColor;
    color: var(--icon-color);
    shape-rendering: crispEdges;
}
.icon--sm {
    width: 20px;
    height: 20px;
}
.icon-btn:hover .icon {
    color: var(--icon-color-hover);
}

/* Light mode style */
body {
    font-family: var(--ps2p-stack);
    margin: 0;
    padding: 20px;
    background: #f0f0f0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    color: black;
    --icon-shadow: #c8c8c8;
}
/* Dark-mode overrides */
body.dark {
    background: #262626;
    color: white;
    /* icon shadow mechanic: */
    --icon-shadow: #101010;  /* crisper on dark backgrounds */
    /* icon hover mechanic: */
    --icon-color: #fff;
    --icon-color-hover: #c8c8c8;
    /* tooltip variables: */
    --tip-bg: #fff;
    --tip-fg: #000;
}

body.dark .game-container {
    background: none;
}
body.dark .hex-input {
    background: rgba(0, 0, 0, 0.1);
    color: #000000;
}
body.dark .color-preview {
    border-color: #ffffff;
}
body.dark .restart-btn {
    background: #1565c0;
}
body.dark .timer-bar {
    background: #1d1d1d;
}
body.dark .timer-fill {
    background: #ffffff;
}
body.dark .timer-text {
    color: #000000;
}
body.dark .color-picker-section {
    background: #222 !important;
}
body.dark .color-canvas {
    border-color: #ffffff
}
body.dark .hue-slider {
    border-color: #ffffff;
}
body.dark .color-picker-section h3 {
    color: #eee !important;
}
body.dark .selected-color-info {
    color: #eee !important;
}
body.dark .custom-color-picker {
    background: #1d1d1d !important;
}
body.dark .color-picker-title {
    color: #eee !important;
}
body.dark .hex-display {
    color: #eee !important;
}
body.dark .hex-input-field {
    padding-left: var(--prefix-space) !important;
    color: #fff;
}
body.dark .hex-input-container {
    background: #2e2e2e;
    position: relative;
}
body.dark .hex-prefix {
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 12px;
    color: #000000;
    user-select: none;
    pointer-events: none;
    z-index: 2;
    color: #ffffff;
}

.ascii-title {
    /* 1) Monospace ensures each character is exactly the same width */
    font-family: monospace;
    /* 2) Preserve every space and line‐break exactly as you type them */
    white-space: pre;
    /* 3) Prevent it from wrapping mid‑line */
    overflow-x: auto;
    /* Optional styling to match your theme */
    color: inherit;
    text-align: center;
    margin: 0 auto;
    padding: 30px 20px 20px;
    line-height: 1em;      /* tighten the lines if you like */
    font-size: 1em;        /* adjust so it fits */
    position: static;
    min-width: 0;
    cursor: default
}
/* animate every character */
.ascii-title span {
    display: inline-block;                      /* so animation-delay works per char */
    animation: wave 6s linear infinite;         /* 6s for a full cycle */
    animation-delay: calc(var(--col) * 0.1s);   /* stagger by 0.1s per character */
}
/* "paused" class will freeze all ascii‑title spans */
.paused .ascii-title span {
    animation-play-state: paused !important;
}
/* cycle through hues for title */
@keyframes wave {
    0%   { color: hsl(   0, 100%, 50%); }
    16%  { color: hsl(  60, 100%, 50%); }
    33%  { color: hsl( 120, 100%, 50%); }
    50%  { color: hsl( 180, 100%, 50%); }
    66%  { color: hsl( 240, 100%, 50%); }
    83%  { color: hsl( 300, 100%, 50%); }
    100% { color: hsl( 360, 100%, 50%); }
}

.color-display {
    width: 200px;
    height: 200px;
    margin: 20px 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    filter: drop-shadow(6px 6px 0 var(--icon-shadow)); /* same shadow as icons */
    justify-content: center;
    text-align: center;
    font-size: 18px;
    color: black;
    margin: 0;
}
.color-display.hidden {
    background: #f9f9f9 !important;
}
body.dark .color-display {           
    color: #ffffff;                  /* make sure your placeholder text is still readable */
    filter: drop-shadow(6px 6px 0 var(--icon-shadow));
}
body.dark .color-display.hidden {
    /* override the always‑black you had before */
    background: #2e2e2e !important;
}
body.dark .color-display.game-ended {
    /* reuse the dark‑mode text style */
    color: #ffffff;
    text-shadow:
        -1px -1px 0 #000000,
        1px -1px 0 #000000,
        -1px  1px 0 #000000,
        1px  1px 0 #000000;
}
body:not(.dark) .color-display.game-ended {
    /* reuse the dark‑mode text style */
    color: #eee;
    text-shadow:
        -1px -1px 0 #000000,
        1px -1px 0 #000000,
        -1px  1px 0 #000000,
        1px  1px 0 #000000;
}
.color-display.disabled {
    cursor: default !important;
    color: #787878 !important;
    pointer-events: none;
}
body.dark .color-display.disabled {
    color: #979797 !important;
}
.color-display.hidden:hover {
    background: #f1f1f1 !important; 
}
body.dark .color-display.hidden:hover {
    background: #373737 !important;
}

.game-info {
    text-align: center;
    margin: 20px 0;
    font-size: 18px;
}

.custom-color-picker {
    display: flex;
    background: #e6e6e6 !important;
    align-items: center;
    gap: 15px;
    margin: 20px auto;
    padding: 20px;
    background: rgba(58, 36, 36, 0.1);
    position: relative;
    box-sizing: border-box;       /* include padding in the width calculation */
    width: 100%;                  /* fill up to… */
    max-width: 665px;             /* …your measured container width */
}

.color-picker-main {
    display: flex;
    align-items: flex-start;
    gap: 15px;
}

.color-canvas {
    width: 200px;
    height: 200px;
    filter: none;
    box-shadow: 6px 6px 0 var(--icon-shadow);
    cursor: pointer;
    position: relative;
    background: linear-gradient(to right, #fff, #f00);
    flex-shrink: 0;
}
.color-canvas::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, transparent, #000);
}
.canvas-cursor {
    position: absolute;
    width: 10px;
    height: 10px;
    border: 2px solid white;
    transform: translate(-50%, -50%);
    pointer-events: none;
    box-shadow: 0 0 0 1px rgba(0,0,0,0.3);
}

.hue-slider {
    width: 20px;
    height: 200px;
    background: linear-gradient(to bottom, 
        #f00 0%, #ff0 16.66%, #0f0 33.33%, 
        #0ff 50%, #00f 66.66%, #f0f 83.33%, #f00 100%);
    position: relative;
    cursor: pointer;
    flex-shrink: 0;
    filter: none;
    box-shadow: 6px 6px 0 var(--icon-shadow);
}
.hue-cursor {
    position: absolute;
    width: 20px;
    height: 16px;
    border: 2px solid white;
    transform: translate(-8%, -50%);
    left: 0px;
    pointer-events: none;
    box-shadow: 0 0 0 1px rgba(0,0,0,0.3);
}

.color-controls {
    display: flex;
    flex-direction: column;
    gap: 15px;
    align-items: center;
    height: 200px;
    justify-content: space-between;
}

.color-preview {
    width: 160px;
    flex: 1;
    height: 100px;
    margin: 0;
    filter: drop-shadow(6px 6px 0 var(--icon-shadow));
}

.hex-input-container {
    --prefix-space: 24px;
    display: flex;
    align-items: center;
    width: 160px;
    height: 32px;
    background: #f9f9f9;
    border: none;
    position: relative;
    box-shadow: 6px 6px 0 var(--icon-shadow);
    overflow: visible;
}
.hex-prefix {
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 12px;
    color: #000000;
    user-select: none;
    pointer-events: none;
    z-index: 2;
}
.hex-input-field {
    padding-left: var(--prefix-space) !important;
    font-size: 12px;
    padding: 8px 4px;
    border: none;
    flex: 1;
    min-width: 0; /* prevent overflow */
    background: transparent;
    text-transform: uppercase;
    color: #000000;
    outline: none;
    padding-right: 32px;
}

.hex-copy-btn {
    background: none;
    border: none;
    width: 32px;          /* hitbox width */
    height: 32px;         /* match your container height */
    padding: 0;           /* size comes from width/height */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    right: 0;
    position: absolute;
}
.hex-copy-btn:hover .icon {
    color: var(--icon-color-hover);
}

.color-game-section {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 30px;
    margin: 20px 0;
    flex-wrap: wrap;
}

.game-over {
    text-align: center;
    margin: 20px 0;
    padding: 20px;
    background: rgba(0, 0, 0, 0.2);
}

.restart-btn {
    font-size: 18px;
    padding: 12px 24px;
    border: none;
    background: #2196F3;
    color: white;
    cursor: pointer;
    margin: 10px;
}

.timer-bar {
    position: relative;
    width: 100%;
    max-width: 625px;
    height: 32px;
    background: rgba(143, 143, 143, 0.1);
    overflow: hidden;
    margin: 10px auto;
    box-shadow: 6px 6px 0 var(--icon-shadow);
}
/* the animated "fill" */
.timer-fill {
    width: 100%;              /* starts full */
    height: 100%;
    background: #000000;       /* or pick any accent color */
    transition: width linear;  /* you'll set duration in JS */
}
.timer-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    font-size: 12px;
    color: #ffffff;
    white-space: nowrap;
    z-index: 1;
}
    
/* === Wordle-style HEX grid === */
.hex-grid-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    margin: 20px 0;
}
.hex-grid {
    display: grid;
    grid-template-rows: repeat(6, 1fr);
    grid-auto-rows: 50px;
    gap: 12px;
}
.hex-grid-row {
    display: grid;
    grid-template-columns: 32px repeat(6, 50px) 32px;
    gap: 12px;
    justify-content: center;
}
.grid-cell {
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #fff;
    font-size: 16px;
    user-select: none;
    text-transform: uppercase;
    filter: drop-shadow(4px 4px 0 var(--icon-shadow));
}
body.dark .grid-cell {
    background: #424242;
    color: #ffffff;
}
.grid-row-locked .grid-cell {
    pointer-events: none;
}
.grid-cell.correct {
    background: #4CAF50 !important;
    border-color: #4CAF50 !important;
    color: #fff !important;
}
.grid-cell.close {
    background: #FFC107 !important;
    border-color: #FFC107 !important;
    color: #fff !important;
}
.grid-cell.wrong {
    background: #f44336 !important;
    border-color: #f44336 !important;
    color: #fff !important;
}
.grid-current {
    outline: 2px dashed #000;
    outline-offset: 2px;
}
body.dark .grid-current {
    outline-color: #fff;
}
        
/* Row hashtag label (left of each row) */
.row-label {
    width: 32px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 30px;
    user-select: none;
    visibility: hidden; /* only current row shows; completed rows stay visible once colored */
    filter: drop-shadow(4px 4px 0 var(--icon-shadow));
}
.row-label.visible {
    visibility: visible;
}
.row-label.colored {
    /* outline for readability across backgrounds */
    text-shadow:
        -1px -1px 0 #000,
        1px -1px 0 #000,
        -1px  1px 0 #000,
        1px  1px 0 #000;
}
/* Right-side paste action cell */
.row-action {
    width: 32px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden; /* hidden by default; only current row shows */
}
.row-action.visible { visibility: visible; }

.paste-btn {
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}
.paste-btn .icon {
    filter: drop-shadow(3px 3px 0 var(--icon-shadow));
    width: 30px;
    height: 30px;
}
.paste-btn:hover .icon {
    color: var(--icon-color-hover);
}

.hex-keyboard {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-top: 15px;
}
.keyboard-row {
    display: flex;
    gap: 8px;
    justify-content: center;
}
.key-btn {
    background: #000000;
    color: #ffffff;
    border: none;
    padding: 12px;
    font-size: 14px;
    cursor: pointer;
    min-width: 40px;
    height: 50px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    user-select: none;
    text-transform: uppercase;
    filter: drop-shadow(4px 4px 0 var(--icon-shadow));
}
.key-btn:hover {
    background: #333333
}
.wide-key {
    flex: 1;
}
body.dark .key-btn {
    background: #ffffff;
    color: #000000;
}
body.dark .key-btn:hover {
    background: #dddddd;
}